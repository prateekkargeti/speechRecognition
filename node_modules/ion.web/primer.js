(function() {
    'use strict';

    window._ionPrimerFeatures = {};
    window._ionPrimerFeatures.isTouchDevice = "ontouchstart" in window || (!!window.navigator.msMaxTouchPoints);

    window.addEventListener(window._ionPrimerFeatures.isTouchDevice ? "touchstart" : "click", function(e) {
        window.ionweb && window.ionweb.toolkit && window.ionweb.toolkit.popupClickHandler && window.ionweb.toolkit.popupClickHandler(e);
    }, true);
    window.addEventListener('keydown', function(e) {
        if (e.keyCode === 27 || e.key === "Esc") {
            var managed = window.ionweb && window.ionweb.toolkit && window.ionweb.toolkit.popupClickHandler && window.ionweb.toolkit.popupClickHandler(e, true);

            if (managed) {
                e.preventDefault();
            }
        }
    }, true);

    window.addEventListener("resize", function() {

        if(window.document.activeElement && (window.document.activeElement.tagName === "INPUT" || window.document.activeElement.tagName === "TEXTAREA")) {
            setTimeout(function() {
                window.document.activeElement.scrollIntoView(false);
            }, 100);
        }
    });

    window.addEventListener("touchmove", function (event) {

        if (event.touches.length > 1) { event.preventDefault(); }
    }, false);

    var lastTouchEnd = 0;
    window.addEventListener("touchend", function (event) {
        var lastTouchStart = (new Date()).getTime();

        if (lastTouchStart - lastTouchEnd <= ionweb.DOUBLE_TOUCH_DELAY) {
            event.preventDefault();
        }
        lastTouchEnd = lastTouchStart;
    }, false);

    window.ionweb = window.ionweb || {};
    ionweb._location = ionweb._location || (ionweb.clientRoot ? ionweb.clientRoot : "");
    ionweb._isSlave = ionweb._isSlave || false;
    ionweb._rootDiv = ionweb._rootDiv || document.body;
    ionweb._shellBundle = ["app/shell-bundle.min.js"];
    ionweb._lessWwPath = "app/lessww.min.js";
    ionweb._primerHandler = ionweb._primerHandler || function() { ionweb.bootstrap(null); };

    window.less = {

        async: false,
        fileAsync: false,
        useFileCache: true,
        watchMode: false,
        env: "production"
    };

    window.dojoConfig = {
        baseUrl: ionweb._location,
        fixupUrl: function(url) {
            url += ""; 
            if(url.indexOf(":/" + "/") < 0 && url[0] !== "/") {
                url = ionweb._location + url;
            }
            return url;
        },
        tlmSiblingOfDojo: false,
        locale: "en-us",
        packages: [
            { name: "gridx", location: "lib/gridx/gridx", main: "grid-all" },
            { name: "moment", location: "lib/moment", main: "moment-with-locales.min" },
            { name: "plotly", location: "lib/plotly.js", main: "plotly-ion.min" },
            { name: "cometd", location: "lib/cometd", main: "cometd-all-min" },
            { name: "lodash", location: "lib/lodash", main: "lodash" },
            { name: "gridstack", location: "lib/gridstack", main: "gridstack.min" },
            { name: "less", location: "lib/less", main: "less.min" },
            { name: "q", location: "lib/q", main: "q" },
            { name: "bootstrap", location: "lib/bootstrap/js", main: "bootstrap.min" },
            { name: "angularjs", location: "lib/angular", main: "angular.min" },
            { name: "selectize", location: "lib/selectize", main: "selectize.min" },
            { name: "md5", location: "lib/js-md5", main: "md5.min" },
            { name: "jquery", location: "lib/jquery", main: "jquery.min" },
            { name: "jquery-ui", location: "lib/jquery-ui", main: "jquery-ui.min" },
            { name: "ui-bootstrap", location: "lib/angular-bootstrap", main: "ui-bootstrap-tpls.min" },
            { name: "ng-route", location: "lib/angular-route", main: "angular-route.min" },
            { name: "ng-animate", location: "lib/angular-animate", main: "angular-animate.min" },
            { name: "ionweb-angular", location: "app", main: "ionweb-angular.min" },
            { name: "ionweb-react", location: "app", main: "ionweb-react.min" },
            { name: "react-bundle", location: "lib/react-bundle", main: "index.min" },
            { name: "angular-bundle", location: "lib/angular-bundle", main: "@angular.min" }
        ]
    };

    var metaLinks = [

        {"name": "viewport", "content": "width=device-width, user-scalable=no"},

        {"name": "format-detection", "content": "telephone=no"}
    ];

    metaLinks.forEach(function(attributes) {
        var link = document.createElement("meta");

        Object.keys(attributes).forEach(function(key) {
            link.setAttribute(key, attributes[key]);
        });

        document.head.appendChild(link);
    });

    var srcList = [
        "lib/gridx/dojo/dojo.js" 
    ];

    var reqSrcList = [
        "q",
        "moment",

        "jquery",
        "jquery-ui",

        "bootstrap",

        "angularjs",
        "ng-route",
        "ng-animate",
        "ui-bootstrap"
    ];

    ionweb._asyncLoad = function(paths, handler) {
        function load(path, handler) {
            var el = document.createElement("script");
            el.setAttribute("src", ionweb._location + path);
            if (el.addEventListener) {
                el.addEventListener("load", handler, false);
            } else if (el.readyState) {
                el.onreadystatechange = handler;
            }
            document.body.appendChild(el);
        }
        if (paths.length > 0) {
            load(paths.shift(), function() {
                ionweb._asyncLoad(paths, handler);
            });
        } else {
            handler();
        }
    }

    ionweb._asyncLoad(srcList, function() {

        require(reqSrcList, function() {
            require(['dojo/has', 'dojo/sniff'], function(has) {
                if (has('ie') < 10) {
                    alert('This browser does not match the minimum requirements to run the application. Please switch to a newer browser.');
                } else {

                    define('angular', [], function() { return angular; });

                    ionweb._asyncLoad(["app/login-bundle.min.js"], function() {

                        define('ion.web', [], function() { return ionweb; });
                        ionweb._primerHandler();
                    });
                }
            });
        });
    });
})();
