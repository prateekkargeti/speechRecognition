var child_process = require('child_process');
var fs = require('fs');
var fse = require('fs-extra');
var pkg = require('./package.json');
function get_git(handler) {
    var git = child_process.spawn('git', ['rev-list', '--count', 'HEAD']);
    git.on('error', err => {
        console.log('Failed to run "git" process: ', err);
        handler(null);
    });
    var stdout = '';
    git.stdout.on('data', data => {
        stdout += data.toString();
    });
    git.on('close', code => {
        var count = stdout.replace(/(\r\n|\n|\r)/gm, "");
        console.log("Git info fetched (revlist count: #" + count + ")");
        handler(count);
    });
}
function create_tarball(handler) {
    var pack = child_process.spawn('npm', ['pack'], { shell: true });
    pack.on('error', err => {
        console.log('Failed to run "npm pack" process: ', err);
        handler(null);
    });
    var stdout = '';
    pack.stdout.on('data', data => {
        stdout += data.toString();
    });
    pack.on('close', code => {
        var name = stdout.replace(/(\r\n|\n|\r)/gm, "");
        handler(name);
    });
}
function deploy(targetPath, ver) {
    targetPath += pkg.name + '_' + ver + '.tgz';
    create_tarball(fileName => {
        if (fileName) {
            // copy
            fse.copySync(fileName, targetPath);
            console.log('Deployed to: ', targetPath);
            fs.unlinkSync(fileName);
        }
    });
}
// Calc version
var ver = pkg.version;
var isSnapshot = ver.indexOf('-SNAPSHOT') > 0;
var targetPath = '\\\\compilatio.iontrading.com\\releases\\weblibzip\\' + pkg.name + '\\';
if (isSnapshot) {
    targetPath += 'SNAPSHOTS\\';
    // Fetch snapshot count
    get_git(revNumber => {
        if (revNumber) {
            ver = ver.replace('-SNAPSHOT', '') + '-r' + revNumber;
            deploy(targetPath, ver);
        }
    });
}
else {
    deploy(targetPath, ver);
}